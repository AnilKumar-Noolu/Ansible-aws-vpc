- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Import VPC variables
      include_vars: vars/vpc_setup

    - name: Create anil VPC
      ec2_vpc_net:
        name: '{{vpc_name}}'
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout

#    - debug:
#        var: vpcout

    - name: create Public subnet1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{pubsub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: anil_pubsub1
      register: pubsub1_out
#    - debug:
#        var: pubsub1_out

    - name: create Public subnet2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{pubsub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: anil_pubsub2
      register: pubsub2_out
#    - debug:
#        var: pubsub2_out

    - name: create Public subnet3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{pubsub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: anil_pubsub3
      register: pubsub3_out
#    - debug:
#        var: pubsub3_out

    - name: create Private subnet1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{privsub1Cidr}}"
        resource_tags:
          Name: anil_privsub1
      register: privsub1_out
#    - debug:
#        var: privsub1_out

    - name: create Private subnet2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{privsub2Cidr}}"
        resource_tags:
          Name: anil_privsub2
      register: privsub2_out
#    - debug:
#        var: privsub2_out

    - name: create Private subnet3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{privsub3Cidr}}"
        resource_tags:
          Name: anil_privsub3
      register: privsub3_out
#    - debug:
#        var: privsub3_out

    - name: Create Internet Gateway and Route Table
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: Anil-IGW
      register: igw_out
#    - debug:
#        var: igw_out

    - name: Created route Table in Public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Anil-pubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out
#    - debug:
#        var: pubRT_out

    - name: Create new NAT gateway and allocate new EIP if a NAT gateway doesn't exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out
#    - debug:
#        var: NATGW_out

    - name: create private subnet RT
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Anil-privRT
        subnets:
          - "{{privsub1_out.subnet.id}}"
          - "{{privsub2_out.subnet.id}}"
          - "{{privsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{NATGW_out.nat_gateway_id}}"
      register: privRT_out
#    - debug:
#        var: privRT_out

    - debug:
        var: "{{item}}"

      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - privRT_out.route_table.id
        - NATGW_out.nat_gateway_id

    - set_fact:
        vpc_id: "{{vpcout.vpc.id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        privsub1id: "{{privsub1_out.subnet.id}}"
        privsub2id: "{{privsub2_out.subnet.id}}"
        privsub3id: "{{privsub3_out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        pubRTid: "{{pubRT_out.route_table.id}}"
        privRTid: "{{privRT_out.route_table.id}}"
        NATGWid: "{{NATGW_out.nat_gateway_id}}"
        cacheable: yes

    - name: Create variable files for vpc output
      copy:
        content: "vpcid: {{vpcout.vpc.id }}\npubsub1id: {{ pubsub1_out.subnet.id }}\npubsub2id: {{ pubsub2_out.subnet.id }}\npubsub3id: {{ pubsub3_out.subnet.id }}\nprivsub1id: {{ privsub1_out.subnet.id }}\nprivsub2id: {{ privsub2_out.subnet.id }}\nprivsub3id: {{ privsub3_out.subnet.id }}\nigwid: {{ igw_out.gateway_id }}\npubRTid: {{ pubRT_out.route_table.id }}\nNATGWid: {{ NATGW_out.nat_gateway_id }}\nprivRTid: {{ privRT_out.route_table.id }}\n"
        dest: vars/vpc-output-vars

